{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
              "adminPassword": {
            "type": "securestring",
			"defaultValue" : "Atmosera123!",
            "metadata": {
                "description": "Password for VM-Series administrator"
            }
        },
        "adminUserName": {
            "type": "string",
			"defaultValue" : "atmosera",
            "metadata": {
                "description": "Username for VM-Series administrator"
            }
        },
        "authenticationType": {
            "type": "string",
            "metadata": {
                "descritpion": "Type of authentication "
            },
            "allowedValues": ["sshPublicKey","password"],
            "defaultValue": "password"
        },
        "availabilitySetName": {
            "type": "string",
	    "defaultValue": "VMSeriesFwAvSet",
            "metadata": {
                "description": "Azure Availability Set for VM-Series firewalls"
            }
        },
        "baseUrl" : {
		"type" : "string",
		"metadata": {
			"artifactsBaseUrl": ""
		},
		"defaultValue": "https://raw.githubusercontent.com/rdecker81/PaloAlto/master/HAFirewalls"
	},
        "dnsNameForPublicIP": {
            "type": "string",
			"defaultValue" : "twofwtest01",
            "metadata": {
                "description": "Globally unique DNS name to access management interface of VM-Series firewall"
            }
        },
        "dnsNameForVM2PublicIP": {
            "type": "string",
			"defaultValue" : "twofwtest02",
            "metadata": {
                "description": "Globally unique DNS name to access management interface of VM-Series firewall"
            }
        },
        "existingStorageAccountRG": {
            "type": "string",
            "defaultValue" : "",
            "metadata": {
               "description": "Storage Resource Group of the Existing VM."
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "bundle2",
            "allowedValues": ["byol","bundle1","bundle2"],
            "metadata": {
                "description": "VM-Series model: BYOL or hourly pay-as-you-go (PAYG): Bundle 1 or Bundle 2"
            }
        },
		"imageVersion": {
            "type": "string",
            "defaultValue": "10.1.0",
            "allowedValues": ["latest","9.1.0","9.0.9","8.1.9","10.1.0"],
            "metadata": {
                "description": "PAN-OS version."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "region of resources"
            }
        },
        "newStorageAccount": {
            "type": "string",
			"defaultValue" : "twofwtest",
            "metadata": {
                "description": "Globally unique lowercase name of your storage account.  Only lowercase letters and numbers."
            }
        },
        "routeTables_Internal_FW_name": {
            "defaultValue": "Internal_FW",
            "type": "String"
        },
        "srcIPInboundNSG": {
            "type": "string",
            "metadata": {
                "description": "Your source public IP address. Added to the restrict inbound DefaultNSG on eth0 (MGMT)"
            },
            "defaultValue": "0.0.0.0/0"
        },
        "sshKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH RSA public key file as a string."
            }
        }, 
        "storageAccountNewOrExisting" : {
            "type": "string",
            "defaultValue" : "new",
            "allowedValues" : ["new","existing"],
            "metadata": {
                "Description": "Indicates whether the Storage Account is new or existing"
            }
        }, 
        "storageAccountType": {
            "type": "string",
	    "metadata": {
		"description": "The type of the Storage Account created."
	    },
	    "defaultValue":"Standard_LRS"
	},
	"subnet0Name": {
      "type": "string",
      "defaultValue": "Mgmt",
      "metadata": {
        "description": "Subnet for the Mgmt"
      }
    },
        "subnet0Prefix": {
      "type": "string",
      "defaultValue": "172.20.0.0/27",
      "metadata": {
        "description": "Mgmt subnet CIDR"
      }
    },
        "subnet0StartAddress": {
      "type": "string",
      "defaultValue": "172.20.0.4",
      "metadata": {
        "description": "Mgmt subnet start address"
      }
    },
    "subnet1Name": {
      "type": "string",
      "defaultValue": "FW-External",
      "metadata": {
        "description": "Subnet for the Untrust"
      }
    },
    "subnet1Prefix": {
      "type": "string",
      "defaultValue": "172.20.0.64/26",
      "metadata": {
        "description": "External Firewall subnet CIDR"
      }
    },
    "subnet1StartAddress": {
      "type": "string",
      "defaultValue": "172.20.0.68",
      "metadata": {
        "description": "External Firewall subnet start address"
      }
    },
    "subnet2Name": {
      "type": "string",
      "defaultValue": "FW-Internal",
      "metadata": {
        "description": "Subnet for the Trust"
      }
    },
    "subnet2Prefix": {
      "type": "string",
      "defaultValue": "172.20.0.128/26",
      "metadata": {
        "description": "Internal Firewall subnet CIDR"
      }
    },
    "subnet2StartAddress": {
      "type": "string",
      "defaultValue": "172.20.0.132",
      "metadata": {
        "description": "Internal Firewall subnet start address"
      }
    },
    "subnet3Name": {
      "type": "string",
      "defaultValue": "HA",
      "metadata": {
        "description": "HA Network"
      }
    },
    "subnet3Prefix": {
      "type": "string",
      "defaultValue": "172.20.0.32/27",
      "metadata": {
        "description": "HA subnet CIDR"
      }
    },
    "subnet3StartAddress": {
      "type": "string",
      "defaultValue": "172.20.0.36",
      "metadata": {
        "description": "HA Firewall subnet start address"
      }
    },
    "trustvip": {
      "type": "string",
      "defaultValue": "172.20.0.134",
      "metadata": {
        "description": "Trusted floating IP"
      }
    },
    "untrustvip": {
      "type": "string",
      "defaultValue": "172.20.0.70",
      "metadata": {
        "description": "Untrusted floating IP"
      }
    },
    "virtualNetworkAddressPrefix": {
      "type": "string",
      "defaultValue": "172.20.0.0/23",
      "metadata": {
        "description": "Virtual network address CIDR"
      }
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "Name of the virtual network that the consumer wants to use"
      },
      "defaultValue": "vnet01"
    },
	"vm2ExternalAddress": {
      "type": "string",
      "defaultValue": "172.20.0.69",
      "metadata": {
        "description": "External Firewall subnet start address"
      }
    },
    "vm2HAAddress": {
      "type": "string",
      "defaultValue": "172.20.0.37",
      "metadata": {
        "description": "HA Firewall subnet start address"
      }
    },
    "vm2InternalAddress": {
      "type": "string",
      "defaultValue": "172.20.0.133",
      "metadata": {
        "description": "Internal Firewall subnet start address"
      }
    },
    "vm2MgmtAddress": {
      "type": "string",
      "defaultValue": "172.20.0.5",
      "metadata": {
        "description": "Mgmt subnet start address"
      }
    },
	"vm2Name": {
		   "type": "string",
		   "defaultValue": "fw02",
		   "metadata": {
			  "description": "Name of VM-Series VM in the Azure portal"
			  }
		   },
	"vmName": {
            "type": "string",
			"defaultValue": "fw01",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            }
        },
	"vmSize": {
            "type": "string",
			"defaultValue": "Standard_D3_v2",
            "allowedValues": ["Standard_DS3_v2", "Standard_D3_v2", "Standard_DS4_v2", "Standard_D4_v2", "Standard_DS5_v2", "Standard_D5_v2"],
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        }
    },
    "variables": 
      {
        "apiVersion": "2020-11-01",
        "imagePublisher": "paloaltonetworks",
		    "imageOffer" : "vmseries-flex",
        "fwpublicIPName": "[concat(parameters('vmName'), '-fwMgmtPublicIP')]",
        "fw2publicIPName": "[concat(parameters('vm2Name'), '-fwMgmtPublicIP')]",
        "vm1nicName": "[concat(parameters('vmName'), '-eth')]",
        "vm2nicName": "[concat(parameters('vm2Name'), '-eth')]",
        "FWPrivateIPAddressUntrust": "[parameters('subnet1StartAddress')]",
        "FWPrivateIPAddressTrust": "[parameters('subnet2StartAddress')]",
        "FWPrivateIPAddressHA": "[parameters('subnet3StartAddress')]",
		    "VM2PrivateIPAddressUntrust": "[parameters('vm2ExternalAddress')]",
        "VM2PrivateIPAddressTrust": "[parameters('vm2InternalAddress')]",
        "VM2PrivateIPAddressHA": "[parameters('vm2HAAddress')]",
		    "UntrustedVIP": "[parameters('untrustvip')]",
		    "TrustedVIP": "[parameters('trustvip')]",
        "publicIPAddressType": "Static",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
		    "subnet3Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet3Name'))]",
        "vm1MgmtAddr": "[parameters('subnet0StartAddress')]",
        "vm2MgmtAddr": "[parameters('vm2MgmtAddress')]",
	      "storageAccountSetupURL" : "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
	      "vmTemplateUrl": "[concat(parameters('baseUrl'), '/virtual-machine-', parameters('authenticationType'),'.json')]"
      },
    "resources": [
              {
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2020-11-01",
            "name": "[concat(parameters('routeTables_Internal_FW_name'), '/Default_to_FW')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/routeTables', parameters('routeTables_Internal_FW_name'))]"
            ],
            "properties": {
                "addressPrefix": "0.0.0.0/0",
                "nextHopType": "VirtualAppliance",
                "nextHopIpAddress": "172.20.0.134",
                "hasBgpOverride": false
            }
        },
        {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "location": "[parameters('location')]",
        "properties": {
            "securityRules": [{
                "name": "Allow-Outside-From-IP",
                "properties": {
                    "description": "Rule",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 100,
                    "direction": "Inbound"
                }
            }, {
                "name": "Allow-Intra",
                "properties": {
                    "description": "Allow intra network traffic",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "[concat(parameters('virtualNetworkAddressPrefix'))]",
                    "destinationAddressPrefix": "*",
                    "access": "Allow",
                    "priority": 110,
                    "direction": "Inbound"
                }
            }, {
                "name": "Default-Deny",
                "properties": {
                    "description": "Default-Deny if we don't match Allow rule",
                    "protocol": "*",
                    "sourcePortRange": "*",
                    "destinationPortRange": "*",
                    "sourceAddressPrefix": "*",
                    "destinationAddressPrefix": "*",
                    "access": "Deny",
                    "priority": 4000,
                    "direction": "Inbound"
                }
            }]
        }
    },
    {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm1nicName'), '0')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '0')]"
        },
        "properties": {
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '0')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('vm1MgmtAddr')]",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPName'))]"
                    },
                    "subnet": {
                        "id": "[variables(concat('subnet','0','Ref'))]"
                    }
                }
            }]
        }
    },
    {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm1nicName'), '1')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '1')]"
        },
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [
			{
                "name": "[concat('ipconfig', '1')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('FWPrivateIPAddressUntrust')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','1','Ref'))]"
                    },
					"primary": true
                }
            },
			{
				"name": "external-floating-ip",
				"properties": {
					"privateIPAddress": "[variables('UntrustedVIP')]",
					"privateIPAllocationMethod": "Static",
					"subnet": {
						"id": "[variables(concat('subnet','1','Ref'))]"
					},
					"primary": false,
					"privateIPAddressVersion": "IPv4"
				}
			}]
        }
    }, 
    {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm1nicName'), '2')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '2')]"
        },
        "properties": 
		{
            "enableIPForwarding": true,
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '2')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('FWPrivateIPAddressTrust')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','2','Ref'))]"
                    },
				"primary": true
                }
            },
			{
				"name": "internal-floating-ip",
				"properties": {
					"privateIPAddress": "[variables('TrustedVIP')]",
					"privateIPAllocationMethod": "Static",
					"subnet": {
						"id": "[variables(concat('subnet','2','Ref'))]"
					},
					"primary": false,
					"privateIPAddressVersion": "IPv4"
				}
			}]
		}
	},
	    {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm1nicName'), '3')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '3')]"
        },
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '1')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('FWPrivateIPAddressHA')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','3','Ref'))]"
                    }
                }
            }]
        }
    }, 
	{
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm2nicName'), '0')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('fw2publicIPName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '0')]"
        },
        "properties": {
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '0')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('vm2MgmtAddr')]",
                    "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fw2publicIPName'))]"
                    },
                    "subnet": {
                        "id": "[variables(concat('subnet','0','Ref'))]"
                    }
                }
            }]
        }
    }, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm2nicName'), '1')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '1')]"
        },
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [
			{
                "name": "[concat('ipconfig', '1')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('VM2PrivateIPAddressUntrust')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','1','Ref'))]"
                    },
					"primary": true
                }
            }]
        }
    }, 
	{
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm2nicName'), '2')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '2')]"
        },
        "properties": 
		{
            "enableIPForwarding": true,
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '2')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('VM2PrivateIPAddressTrust')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','2','Ref'))]"
                    },
				"primary": true
                }
            }]
		}
	}, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(variables('vm2nicName'), '3')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "tags": {
            "displayName": "[concat('NetworkInterfaces', '3')]"
        },
        "properties": {
            "enableIPForwarding": true,
            "ipConfigurations": [{
                "name": "[concat('ipconfig', '1')]",
                "properties": {
                    "privateIPAllocationMethod": "Static",
                    "privateIPAddress": "[variables('VM2PrivateIPAddressHA')]",
                    "subnet": {
                        "id": "[variables(concat('subnet','3','Ref'))]"
                    }
                }
            }]
        }
    }, 
	{
      "apiVersion": "2020-06-01",
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[parameters('availabilitySetName')]",
      "location": "[resourceGroup().location]"
    },
	{
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "name": "[parameters('routeTables_Internal_FW_name')]",
            "location": "westus2",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "Default_to_FW",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "172.20.0.134",
                            "hasBgpOverride": false
                        }
                    }
                ]
            }
        },
{
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgname-mgmt'))]"
        ],
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[parameters('virtualNetworkAddressPrefix')]"
                ]
            },
            "subnets": [{
                "name": "[parameters('subnet0Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet0Prefix')]",
                    "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname-mgmt'))]"
                    }
                }
            }, {
                "name": "[parameters('subnet1Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet1Prefix')]"
                }
            }, {
                "name": "[parameters('subnet2Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet2Prefix')]"
                }
            }, {
                "name": "[parameters('subnet3Name')]",
                "properties": {
                    "addressPrefix": "[parameters('subnet3Prefix')]"
                }
            }]
        }
    }, {
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('fw2publicIPName')]",
        "location": "[parameters('location')]",
        "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": {
                "domainNameLabel": "[parameters('dnsNameForVM2PublicIP')]"
            }
        }
    }, 
	{
        "apiVersion": "[variables('apiVersion')]",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('fwpublicIPName')]",
        "location": "[parameters('location')]",
        "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": {
                "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
            }
        }
    },
	{
      "name": "PAN-VM1",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
         "storageAcountSetup1",
         "[concat('Microsoft.Network/networkInterfaces/', variables('vm1nicName'), '0')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('vm1nicName'), '1')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('vm1nicName'), '2')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('vm1nicName'), '3')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmName": {
            "value": "[parameters('vmName')]"
          },
          "imageSku": {
            "value": "[parameters('imageSku')]"
          },
          "imageOffer": {
            "value": "[variables('imageOffer')]"
          },
  	      "imageVersion": {
            "value": "[parameters('imageVersion')]"
          },
          "imagePublisher": {
            "value": "[variables('imagePublisher')]"
          },
          "nicName": {
            "value": "[variables('vm1nicName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "newStorageAccount": {
            "value": "[parameters('newStorageAccount')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "availabilitySetName": {
            "value": "[parameters('availabilitySetName')]"
        }
        }
      }
    },
    {
      "name": "PAN-VM2",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
         "storageAcountSetup1",
         "[concat('Microsoft.Network/networkInterfaces/', variables('vm2nicName'), '0')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('vm2nicName'), '1')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('vm2nicName'), '2')]",
         "[concat('Microsoft.Network/networkInterfaces/', variables('vm2nicName'), '3')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('vmTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[parameters('location')]"
          },
          "vmName": {
            "value": "[parameters('vm2Name')]"
          },
          "imageSku": {
            "value": "[parameters('imageSku')]"
          },
          "imageOffer": {
            "value": "[variables('imageOffer')]"
          },
		      "imageVersion": {
            "value": "[parameters('imageVersion')]"
          },
          "imagePublisher": {
            "value": "[variables('imagePublisher')]"
          },
          "nicName": {
            "value": "[variables('vm2nicName')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "adminUserName": {
            "value": "[parameters('adminUserName')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "newStorageAccount": {
            "value": "[parameters('newStorageAccount')]"
          },
          "sshKey": {
            "value": "[parameters('sshKey')]"
          },
          "availabilitySetName": {
            "value": "[parameters('availabilitySetName')]"
        }
        }
      }
    },
    {
	"name": "storageAcountSetup1",
	"type": "Microsoft.Resources/deployments",
        "apiVersion": "2021-04-01",
	"properties" : {
		"mode": "Incremental",
		"templateLink" : {
		"uri" : "[variables('storageAccountSetupURL')]",
		"contentVersion": "1.0.0.0"
	},
	"parameters" : {
		"location": {
			"value": "[parameters('location')]"
		},
		"storageAccountType": {
			"value": "[parameters('storageAccountType')]"
		},
		"newStorageAccount" : {
			"value": "[parameters('newStorageAccount')]"
		},
		"storageAccountExistingRG": {
			"value": "[parameters('existingStorageAccountRG')]"
		}
	  }
        }
    }
  ]
}
